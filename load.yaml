apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    #deployment.kubernetes.io/revision: "2"
    #kubectl.kubernetes.io/last-applied-configuration: |
    #  {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"load","namespace":"test"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"load"}},"template":{"metadata":{"annotations":{"linkerd.io/inject":"enabled"},"labels":{"app":"load"}},"spec":{"containers":[{"args":["slow_cooker -qps ${QPS} -concurrency ${CONCURRENCY} http://podinfo:9898"],"command":["/bin/sh","-c"],"env":[{"name":"QPS","value":"10"},{"name":"CONCURRENCY","value":"1"}],"image":"buoyantio/slow_cooker:1.2.0","name":"slow-cooker"}]}}}}
  #creationTimestamp: "2022-08-30T06:25:59Z"
  #generation: 2
  name: load
  #namespace: test
  #resourceVersion: "6984"
  #uid: 471341ca-c164-4560-ac88-8dd645436cc4
spec:
  #progressDeadlineSeconds: 600
  replicas: 1
  #revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: load
  #strategy:
  #  rollingUpdate:
  #    maxSurge: 25%
  #    maxUnavailable: 25%
  #  type: RollingUpdate
  template:
    metadata:
   #   annotations:
   #     linkerd.io/inject: enabled
      creationTimestamp: null
      labels:
        app: load
        # sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: load
      containers:
      - args:
        - slow_cooker -qps ${QPS} -concurrency ${CONCURRENCY} http://productpage.bookinfo.svc.cluster.local:9080/productpage?u=normal
        command:
        - /bin/sh
        - -c
        env:
        - name: QPS
          value: "1"
        - name: CONCURRENCY
          value: "1"
        image: buoyantio/slow_cooker:1.2.0
        imagePullPolicy: IfNotPresent
        name: slow-cooker
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
    #  schedulerName: default-scheduler
    #  securityContext: {}
    #  terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: load
 # labels:
 #   account: load
---    
apiVersion: v1
kind: Service
metadata:
  name: load
  labels:
    app: load
    service: load
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: load

